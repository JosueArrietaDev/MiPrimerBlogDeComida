server.js
// Importamos la función `createServer` del módulo `http` de Node.js
import { createServer } from 'node:http';
// Importamos la función `readFile` del módulo `fs/promises` de Node.js
import { readFile } from 'node:fs/promises';

// Definimos el nombre del archivo HTML que vamos a leer
let archivoHTML = 'my_proyect\\HTML\\comida.html';

// Creamos un servidor HTTP
const server = createServer(async (request, respuesta) => {
  // Manejamos las solicitudes GET en la ruta raíz
  if (request.method === 'GET' && request.url === '/') {
    try {
      // Leemos el archivo HTML
      const data = await readFile(archivoHTML, 'utf8');
      // Enviamos el contenido del archivo HTML como respuesta con Content-Type correcto
      respuesta.writeHead(200, { 'Content-Type': 'text/html' });
      respuesta.end(data);
    } catch (err) {
      // Manejamos errores al leer el archivo de forma más detallada
      console.error('Error al leer el archivo HTML:', err.message); // Registramos el mensaje de error
      respuesta.writeHead(500, { 'Content-Type': 'text/plain' });
      respuesta.end('Error interno del servidor. Consulte los registros del servidor.'); // Mensaje más informativo
    }
  } else if (request.method === 'GET' && request.url === '/estilos.css') {
    try {
      // Leemos el archivo CSS
      const data = await readFile("my_proyect\\CSS\\EstilosC.css", 'utf8');
      // Enviamos el contenido del archivo CSS como respuesta con Content-Type correcto
      respuesta.writeHead(200, { 'Content-Type': 'text/css' });
      respuesta.end(data);
    } catch (err) {
      // Manejamos errores al leer el archivo CSS de forma más detallada
      console.error('Error al leer el archivo CSS:', err.message); // Registramos el mensaje de error
      respuesta.writeHead(500, { 'Content-Type': 'text/plain' });
      respuesta.end('Error interno del servidor. Consulte los registros del servidor.'); // Mensaje más informativo
    }
  } else {
    // Manejamos otras rutas o métodos
    respuesta.writeHead(404, { 'Content-Type': 'text/plain' });
    respuesta.end('Página no encontrada');
  }
});

// Definimos el puerto en el que el servidor escuchará
const PORT = 3000;

// Iniciamos el servidor en el puerto especificado
server.listen(PORT, () => {
  console.log(`Servidor en funcionamiento en http://localhost:${PORT}`);
});
